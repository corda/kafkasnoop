version: '3'
services:
  kafkasnoop:
    hostname: kafkasnoop
    image: "driessamyn/kafkasnoop-wrap:latest"
    command:
      - --broker
      - kafka:9092
      - --schema-path
      - /schemas
      - --envelope
      - kafkasnoop.test.EnvelopeWithFingerPrint
      - --envelope-payload-field
      - payload
      - --envelope-schema-fingerprint-field
      - schemaFingerprint
    volumes:
      - ./schemas:/schemas:ro
    ports:
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
      publish-schemas:
        condition: service_completed_successfully
  # init container for creating schemas
  publish-schemas:
    image: "driessamyn/kafkasnoop-test:latest"
    command:
      - schema
      - --dir
      - /schemas
    volumes:
      - ./schemas:/schemas
  # continuously publish test messages
  publish-test-messages:
    image: "driessamyn/kafkasnoop-test:latest"
    command:
      - publish
      - --broker
      - kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
  kafka:
    hostname: kafka
    image: "bitnami/kafka:latest"
    ports:
      - "19092:19092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:19092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:19092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list" ]
      interval: 5s
      timeout: 20s
      retries: 15
  zookeeper:
    hostname: zookeeper
    image: "bitnami/zookeeper:latest"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes